{"version":3,"file":"static/webpack/static/development/pages/repos.js.7d8adf6e7b0f3532f42d.hot-update.js","sources":["webpack:///./pages/repos.js"],"sourcesContent":["import fetch from \"node-fetch\";\nimport styles from \"../styles/repos.scss\";\nimport GitHubButton from \"react-github-btn\";\n\nfunction Repos({ repos }) {\n  return (\n    <>\n      <div id=\"title\" className={styles.title}>\n        Our Projects\n      </div>\n      <div id=\"content\" className={styles.repos}>\n        {repos.map(({ id, html_url, name, description, language, homepage }) => (\n            <div id=\"repo\" key={id} className={styles.repo}>\n              <div id=\"top\" className={styles.top}>\n                <a href={homepage || html_url} target=\"_blank\">\n                  <img\n                    src=\"/static/github-icon.png\"\n                    alt=\"github icon\"\n                    width=\"20px\"\n                  />\n                </a>\n                <a\n                  href={homepage || html_url}\n                  target=\"_blank\"\n                  className={styles.name_link}\n                >\n                  <span id=\"name\" className={styles.name}>\n                    {name}\n                  </span>\n                </a>\n              </div>\n              <div id=\"middle\" className={styles.middle}>\n                <span\n                  id=\"description\"\n                  className={styles.property + \" \" + styles.description}\n                >\n                  {description}\n                </span>\n                <span className={styles.property}>{language}</span>\n              </div>\n              <div id=\"bottom\" className={styles.bottom}>\n                <GitHubButton\n                  className={styles.property}\n                  href={`https://github.com/ww-tech/${name}/subscription`}\n                  data-icon=\"octicon-eye\"\n                  data-show-count=\"true\"\n                  aria-label={`Watch ww-tech/${name} on GitHub`}\n                >\n                  Watch\n                </GitHubButton>\n                <GitHubButton\n                  className={styles.property}\n                  href={`https://github.com/ww-tech/${name}/fork`}\n                  data-icon=\"octicon-repo-forked\"\n                  data-show-count=\"true\"\n                  aria-label={`Fork ww-tech/${name} on GitHub`}\n                >\n                  Fork\n                </GitHubButton>\n                <GitHubButton\n                  className={styles.property}\n                  href={`https://github.com/ww-tech/${name}`}\n                  data-icon=\"octicon-star\"\n                  data-show-count=\"true\"\n                  aria-label={`Star ww-tech/${name} on GitHub`}\n                >\n                  Star\n                </GitHubButton>\n              </div>\n            </div>\n        ))}\n      </div>\n    </>\n  );\n}\n\nRepos.getInitialProps = async () => {\n  const res = await fetch(\"https://api.github.com/orgs/WW-tech/repos\");\n  let repos = await res.json();\n  repos = repos\n    .filter(({name}) => name != \"ww-tech.github.io\")\n    .sort(({ watchers: w1 }, { watchers: w2 }) => w2 - w1)\n    .map(({ id, html_url, name, description, language, homepage }) => ({\n      id,\n      html_url,\n      name,\n      description,\n      language,\n      homepage\n    }));\n  return { repos };\n};\n\nexport default Repos;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhDA;AA+DA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AANA;AAcA;AAAA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;;;;A","sourceRoot":""}